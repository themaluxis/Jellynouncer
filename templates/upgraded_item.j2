{#
  Modèle Jinja2 Discord Webhook d'Élément Mis à Jour pour Jellynouncer
  ======================================================================

  Ce modèle génère des messages embed Discord pour les éléments médias mis à jour.
  Affiche ce qui a changé et inclut des métadonnées enrichies de plusieurs sources.

  Priorité des Sources de Métadonnées :
  ------------------------------------
  - Séries TV/Épisodes : TVDb → Propriétés de base Jellyfin
  - Films : TMDb → OMDb → Propriétés de base Jellyfin

  Types de Changements Supportés :
  --------------------------------
  - resolution : Mise à jour de la résolution vidéo
  - codec : Changement de codec vidéo
  - audio_codec : Mise à jour du codec audio
  - audio_channels : Mise à jour de la configuration des canaux
  - hdr_status : Mise à jour HDR
  - file_size : Remplacement de fichier
#}
{
  "embeds": [
    {
      {#
        Titre Dynamique avec Type de Mise à Jour
        -------------------------------------------
        Affiche le type de mise à jour spécifique quand un seul changement s'est produit
      #}
      "title": {{ ("⬆️" ~ 
        ("📺 " ~ (item.name | default('Épisode Inconnu') | truncate(180, True, '...')) if item.item_type == 'Episode' else
         "📺 " ~ (item.name | default('Série Inconnue') | truncate(180, True, '...')) if item.item_type == 'Series' else
         "🎬 " ~ (item.name | default('Film Inconnu') | truncate(180, True, '...')) if item.item_type == 'Movie' else
         "📺 " ~ (item.series_name | default('Série Inconnue')) ~ " - Saison " ~ (item.season_number | default('?') | string) if item.item_type == 'Season' else
         "🎵 " ~ (item.name | default('Chanson Inconnue') | truncate(180, True, '...')) if item.item_type == 'Audio' else
         "💿 " ~ (item.name | default('Album Inconnu') | truncate(180, True, '...')) if item.item_type == 'MusicAlbum' else
         "🎤 " ~ (item.name | default('Artiste Inconnu') | truncate(180, True, '...')) if item.item_type == 'MusicArtist' else
         "📷 " ~ (item.name | default('Photo') | truncate(180, True, '...')) if item.item_type == 'Photo' else
         "📁 " ~ (item.name | default(item.item_type ~ ' Inconnu') | truncate(180, True, '...'))
        ) ~ " " ~ (changes[0].type|title ~ " " if changes|length == 1 else "") ~ "Mis à Jour") | tojson }},

      {#
        Description Riche avec Priorité des Métadonnées
        ---------------------------------------------------
        Même priorité de source de métadonnées que le modèle new_item
      #}
      "description": {{ (
        ("**" ~ (item.series_name | default('Série Inconnue')) ~ "**\n" ~
         "S" ~ ("%02d" % (item.season_number | default(0))) ~ "E" ~ ("%02d" % (item.episode_number | default(0))) ~ "\n" ~
         (item.name | default('Épisode Inconnu')) ~
         ("\n\n" ~ ((item.tvdb.overview[:200] + '...') if item.tvdb.overview | length > 200 else item.tvdb.overview) if item.tvdb and item.tvdb.overview and item.tvdb.overview | length > 0
          else "\n\n" ~ ((item.overview[:200] + '...') if item.overview | length > 200 else item.overview) if item.overview and item.overview | length > 0
          else "")
        ) if item.item_type == 'Episode' else
        ("**" ~ (item.name | default('Titre Inconnu')) ~ "**" ~
         (" (" ~ item.year ~ ")" if item.year else "") ~
         ("\n\n" ~ ((item.tvdb.overview[:200] + '...') if item.tvdb.overview | length > 200 else item.tvdb.overview) if item.tvdb and item.tvdb.overview and item.tvdb.overview | length > 0
          else "\n\n" ~ ((item.overview[:200] + '...') if item.overview | length > 200 else item.overview) if item.overview and item.overview | length > 0
          else "")
        ) if item.item_type in ['Series', 'Season'] else
        ("**" ~ (item.name | default('Titre Inconnu')) ~ "**" ~
         (" (" ~ item.year ~ ")" if item.year else "") ~
         ("\n\n" ~ ((item.tmdb.overview[:200] + '...') if item.tmdb.overview | length > 200 else item.tmdb.overview) if item.tmdb and item.tmdb.overview and item.tmdb.overview | length > 0
          else "\n\n" ~ ((item.omdb.plot[:200] + '...') if item.omdb.plot | length > 200 else item.omdb.plot) if item.omdb and item.omdb.plot and item.omdb.plot != 'N/A'
          else "\n\n" ~ ((item.overview[:200] + '...') if item.overview | length > 200 else item.overview) if item.overview and item.overview | length > 0
          else "")
        ) if item.item_type == 'Movie' else
        ("**" ~ (item.name | default('Titre Inconnu')) ~ "**" ~
         ("\n\n" ~ ((item.overview[:200] + '...') if item.overview | length > 200 else item.overview) if item.overview and item.overview | length > 0 else "")
        )
      ) | tojson }},

      "color": {{ color }},

      "fields": [
        {%- set fields_added = namespace(count=0) -%}

        {#
          Affichage des Changements de Mise à Jour
          -------------------------------------------
          Montre ce qui a été mis à jour avec le format avant → après
        #}
        {% if changes and changes | length > 0 %}
          {% for change in changes[:3] %}
            {% if fields_added.count > 0 %},{% endif %}
            {% set fields_added.count = fields_added.count + 1 %}
          {
            "name": "{% if change.type == 'resolution' -%}
              📐 Mise à Jour Résolution
            {%- elif change.type == 'codec' -%}
              🎞️ Mise à Jour Codec Vidéo
            {%- elif change.type == 'audio_codec' -%}
              🔊 Mise à Jour Codec Audio
            {%- elif change.type == 'audio_channels' -%}
              🔊 Mise à Jour Canaux
            {%- elif change.type == 'hdr_status' -%}
              🌈 Mise à Jour HDR
            {%- elif change.type == 'file_size' -%}
              💾 Fichier Remplacé
            {%- else -%}
              🔄 {{ change.type | title }}
            {%- endif %}",
            "value": {{ ((change.old_value or 'Inconnu') ~ " → **" ~ (change.new_value or 'Inconnu') ~ "**") | tojson }},
            "inline": true
          }
          {% endfor %}
          {% if changes | length > 3 and fields_added.count < 24 %}
            {% if fields_added.count > 0 %},{% endif %}
            {% set fields_added.count = fields_added.count + 1 %}
          {
            "name": "➕ Changements Supplémentaires",
            "value": {{ ("+" ~ ((changes | length - 3) | string) ~ " mises à jour supplémentaires") | tojson }},
            "inline": true
          }
          {% endif %}
        {% endif %}

        {#
          Spécifications Techniques Actuelles
          ------------------------------------
          Affiche les nouvelles spécifications actuelles après mise à jour
        #}
        {% if item.video_height and item.item_type not in ['Audio', 'MusicAlbum', 'MusicArtist'] and fields_added.count < 24 %}
          {% if fields_added.count > 0 %},{% endif %}
          {% set fields_added.count = fields_added.count + 1 %}
        {
          "name": "📐 Qualité Actuelle",
          "value": {{ ((item.video_height | string) ~ "p" ~
            (" " ~ item.video_range if item.video_range and item.video_range != 'SDR' else "")
          ) | tojson }},
          "inline": true
        }
        {% endif %}

        {% if item.video_codec and item.item_type not in ['Audio', 'MusicAlbum', 'MusicArtist'] and fields_added.count < 24 %}
          {% if fields_added.count > 0 %},{% endif %}
          {% set fields_added.count = fields_added.count + 1 %}
        {
          "name": "🎞️ Vidéo",
          "value": {{ ((item.video_codec | upper) ~
            (" " ~ item.video_profile if item.video_profile else "")
          ) | tojson }},
          "inline": true
        }
        {% endif %}

        {% if item.audio_codec and fields_added.count < 24 %}
          {% if fields_added.count > 0 %},{% endif %}
          {% set fields_added.count = fields_added.count + 1 %}
        {
          "name": "🔊 Audio",
          "value": {{ ((item.audio_codec | upper) ~
            (" Stereo" if item.audio_channels == 2
             else " 5.1" if item.audio_channels == 6
             else " 7.1" if item.audio_channels == 8
             else " " ~ (item.audio_channels | string) ~ "ch" if item.audio_channels
             else "")
          ) | tojson }},
          "inline": true
        }
        {% endif %}

        {% if item.file_size and fields_added.count < 24 %}
          {% if fields_added.count > 0 %},{% endif %}
          {% set fields_added.count = fields_added.count + 1 %}
        {
          "name": "💾 Nouvelle Taille",
          "value": {{ (("%.1f" % (item.file_size / 1073741824)) ~ " GB") | tojson }},
          "inline": true
        }
        {% endif %}

        {#
          Affichage des Notes en Ligne
          -----------------------------
          Toutes les notes sur une ligne séparées par des puces
        #}
        {% set has_ratings = false %}
        {% if (item.omdb and (item.omdb.imdb_rating or item.omdb.metascore or
               item.omdb.ratings_dict.rotten_tomatoes)) or
               (item.tmdb and item.tmdb.rating_display) or
               (item.tvdb and item.tvdb.rating) %}
          {% set has_ratings = true %}
        {% endif %}

        {% if has_ratings and fields_added.count < 24 %}
          {% if fields_added.count > 0 %},{% endif %}
          {% set fields_added.count = fields_added.count + 1 %}
        {
          "name": "⭐ Notes",
          "value": {{ (
            {%- set rating_parts = [] -%}
            {%- if item.omdb and item.omdb.imdb_rating and item.omdb.imdb_rating != 'N/A' -%}
              {%- set _ = rating_parts.append('**IMDb:** ' ~ item.omdb.imdb_rating) -%}
            {%- endif -%}
            {%- if item.omdb and item.omdb.ratings_dict.rotten_tomatoes -%}
              {%- set _ = rating_parts.append('**RT:** ' ~ item.omdb.ratings_dict.rotten_tomatoes.value) -%}
            {%- endif -%}
            {%- if item.omdb and item.omdb.metascore and item.omdb.metascore != 'N/A' -%}
              {%- set _ = rating_parts.append('**MC:** ' ~ item.omdb.metascore) -%}
            {%- endif -%}
            {%- if item.tmdb and item.tmdb.rating_display -%}
              {%- set _ = rating_parts.append('**TMDb:** ' ~ item.tmdb.rating_display) -%}
            {%- elif item.omdb and item.omdb.ratings_dict.tmdb -%}
              {%- set _ = rating_parts.append('**TMDb:** ' ~ item.omdb.ratings_dict.tmdb.value) -%}
            {%- endif -%}
            {%- if item.tvdb and item.tvdb.rating -%}
              {%- set _ = rating_parts.append('**TVDb:** ' ~ item.tvdb.rating) -%}
            {%- endif -%}
            rating_parts | join(' • ')
          ) | tojson }},
          "inline": false
        }
        {% endif %}
      ],

      {# Sélection d'image avec priorité #}
      {% if item.item_type == 'Episode' and item.series_id %}
      "thumbnail": {
        "url": {{ thumbnail_url | tojson }}
      },
      {% elif item.item_id %}
      "thumbnail": {
        "url": {{ thumbnail_url | tojson }}
      },
      {% elif item.omdb and item.omdb.poster and item.omdb.poster != 'N/A' %}
      "thumbnail": {
        "url": {{ item.omdb.poster | tojson }}
      },
      {% elif item.tvdb and item.tvdb.poster_url %}
      "thumbnail": {
        "url": {{ item.tvdb.poster_url | tojson }}
      },
      {% elif item.tmdb and item.tmdb.backdrop_url %}
      "image": {
        "url": {{ item.tmdb.backdrop_url | tojson }}
      },
      {% endif %}

      "footer": {
        "text": {{ ((item.library_name or 'Jellyfin') ~
          (" • " ~ item.server_name if item.server_name else "") ~
          (" • IMDb via OMDb" if item.omdb else "") ~
          (" • TheTVDB" if item.tvdb else "") ~
          (" • TMDb" if item.tmdb else "")
        ) | tojson }},
        "icon_url": {{ (jellyfin_url ~ "/web/favicon.png") | tojson }}
      },

      {% if item.item_id %}
      "url": {{ (jellyfin_url ~ "/web/index.html#!/details?id=" ~ item.item_id) | tojson }},
      {% endif %}

      "timestamp": {{ timestamp | tojson }}
    }
  ]
}
