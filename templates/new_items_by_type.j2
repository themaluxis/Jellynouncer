{#
  New Items By Type Template for Jellynouncer
  ============================================

  Groups new items by media type (movies, TV, music, other).
  Shows category-specific information with metadata enrichment.

  Categories: movies, tv, music, other
  Discord limits: Respects 25-field limit per embed
#}
{
  "embeds": [
    {% if category == 'movies' %}
    {
      "title": {{ ("🎬 New Movies Added (" ~ (total_items | string) ~ ")") | tojson }},
      "description": "The following movies have been added to Jellyfin:",
      "color": 65280,

      "fields": [
        {% set field_count = namespace(value=0) %}

        {#
          Process movies with full metadata
          ----------------------------------
          Include ratings, year, quality info
        #}
        {% for item_data in new_items[:8] %}
          {% if field_count.value > 0 %},{% endif %}
          {% set field_count.value = field_count.value + 1 %}
        {
          "name": {{ (((item_data.item.name[:230] + '...') if item_data.item.name|length > 230 else item_data.item.name) ~
            (\" (\" ~ item_data.item.year ~ \")\" if item_data.item.year else \"\")
          ) | tojson }},

          "value": {{ (
            {#
              Movie overview with metadata priority
              --------------------------------------
              TMDb → OMDb → Jellyfin
            #}
            (\"*\" ~ ((item_data.item.tmdb.overview[:150] + '...') if item_data.item.tmdb.overview|length > 150 else item_data.item.tmdb.overview) ~ \"*\\n\" if item_data.item.tmdb and item_data.item.tmdb.overview
             else \"*\" ~ ((item_data.item.omdb.plot[:150] + '...') if item_data.item.omdb.plot|length > 150 else item_data.item.omdb.plot) ~ \"*\\n\" if item_data.item.omdb and item_data.item.omdb.plot and item_data.item.omdb.plot != 'N/A'
             else \"*\" ~ ((item_data.item.overview[:150] + '...') if item_data.item.overview|length > 150 else item_data.item.overview) ~ \"*\\n\" if item_data.item.overview
             else \"\") ~

            (\"📐 \" ~ item_data.item.video_height ~ \"p\" ~
             (\" \" ~ item_data.item.video_range if item_data.item.video_range and item_data.item.video_range != 'SDR' else \"\")
             if item_data.item.video_height else \"\") ~

            (\" • 🎞️ \" ~ (item_data.item.video_codec|upper) if item_data.item.video_codec else \"\") ~

            (\" • 🔊 \" ~ (item_data.item.audio_codec|upper) ~
             (item_data.item.audio_channels ~ \".\" ~ (\"1\" if item_data.item.audio_channels > 2 else \"0\") if item_data.item.audio_channels else \"\")
             if item_data.item.audio_codec else \"\") ~

            {#
              Inline ratings display for movies
              ----------------------------------
              Show all available ratings on one line
            #}
            {%- set rating_parts = [] -%}
            {%- if item_data.item.omdb and item_data.item.omdb.imdb_rating and item_data.item.omdb.imdb_rating != 'N/A' -%}
              {%- set _ = rating_parts.append('IMDb: ' ~ item_data.item.omdb.imdb_rating) -%}
            {%- endif -%}
            {%- if item_data.item.omdb and item_data.item.omdb.ratings_dict.rotten_tomatoes -%}
              {%- set _ = rating_parts.append('RT: ' ~ item_data.item.omdb.ratings_dict.rotten_tomatoes.value) -%}
            {%- endif -%}
            {%- if item_data.item.tmdb and item_data.item.tmdb.rating_display -%}
              {%- set _ = rating_parts.append('TMDb: ' ~ item_data.item.tmdb.rating_display ~ '/10') -%}
            {%- endif -%}
            (\"\\n⭐ \" ~ (rating_parts | join(' • ')) if rating_parts|length > 0 else \"\") ~

            {#
              Genre display with metadata priority
              -------------------------------------
              TMDb → OMDb → Jellyfin
            #}
            {%- set display_genres = null -%}
            {%- if item_data.item.tmdb and item_data.item.tmdb.genres_list -%}
              {%- set display_genres = item_data.item.tmdb.genres_list -%}
            {%- elif item_data.item.omdb and item_data.item.omdb.genres_list -%}
              {%- set display_genres = item_data.item.omdb.genres_list -%}
            {%- elif item_data.item.genres -%}
              {%- set display_genres = item_data.item.genres -%}
            {%- endif -%}
            (\"\\n🎭 \" ~ (display_genres[:3] | join(', ')) if display_genres and display_genres|length > 0 else \"\")
          ) | tojson }},

          "inline": false
        }
        {% endfor %}

        {% if new_items|length > 8 %}
          {% if field_count.value > 0 %},{% endif %}
        {
          "name": "➕ Additional Movies",
          "value": {{ ("And " ~ ((new_items|length - 8) | string) ~ " more movies added...") | tojson }},
          "inline": false
        }
        {% endif %}
      ]
    }

    {% elif category == 'tv' %}
    {
      "title": {{ ("📺 New TV Content Added (" ~ (total_items | string) ~ ")") | tojson }},
      "description": "The following TV shows/episodes have been added to Jellyfin:",
      "color": 65280,

      "fields": [
        {% set field_count = namespace(value=0) %}

        {#
          Process TV content with TVDb priority
          --------------------------------------
          TVDb → Jellyfin base properties
        #}
        {% for item_data in new_items[:8] %}
          {% if field_count.value > 0 %},{% endif %}
          {% set field_count.value = field_count.value + 1 %}
        {
          "name": "{% if item_data.item.item_type == 'Episode' -%}
              📺 Episode: {{ item_data.item.series_name }} - {{ item_data.item.name }}
            {%- elif item_data.item.item_type == 'Series' -%}
              📺 Series: {{ item_data.item.name }}
            {%- else -%}
              📺 {{ item_data.item.item_type }}: {{ item_data.item.name }}
            {%- endif %}",

          "value": "
            {%- if item_data.item.item_type == 'Episode' -%}
              S{{ '%02d'|format(item_data.item.season_number or 0) }}E{{ '%02d'|format(item_data.item.episode_number or 0) }}
            {%- endif -%}

            {#
              TV overview with TVDb priority
              -------------------------------
            #}
            {%- if item_data.item.tvdb and item_data.item.tvdb.overview -%}
              \n*{{ (item_data.item.tvdb.overview[:150] + '...') if item_data.item.tvdb.overview|length > 150 else item_data.item.tvdb.overview }}*
            {%- elif item_data.item.overview -%}
              \n*{{ (item_data.item.overview[:150] + '...') if item_data.item.overview|length > 150 else item_data.item.overview }}*
            {%- endif -%}

            {%- if item_data.item.video_height -%}
              \n📐 {{ item_data.item.video_height }}p
              {%- if item_data.item.video_range and item_data.item.video_range != 'SDR' %} {{ item_data.item.video_range }}{% endif -%}
            {%- endif -%}

            {%- if item_data.item.video_codec -%}
              • 🎞️ {{ item_data.item.video_codec|upper }}
            {%- endif -%}

            {#
              TV ratings with inline display
              -------------------------------
            #}
            {%- set rating_parts = [] -%}
            {%- if item_data.item.tvdb and item_data.item.tvdb.rating -%}
              {%- set _ = rating_parts.append('TVDb: ' ~ item_data.item.tvdb.rating) -%}
            {%- endif -%}
            {%- if item_data.item.omdb and item_data.item.omdb.imdb_rating and item_data.item.omdb.imdb_rating != 'N/A' -%}
              {%- set _ = rating_parts.append('IMDb: ' ~ item_data.item.omdb.imdb_rating) -%}
            {%- endif -%}
            {%- if rating_parts|length > 0 -%}
              \n⭐ {{ rating_parts | join(' • ') }}
            {%- endif -%}

            {#
              TV genres with TVDb priority
              -----------------------------
            #}
            {%- if item_data.item.tvdb and item_data.item.tvdb.genres -%}
              \n🎭 {{ item_data.item.tvdb.genres[:3] | join(', ') }}
            {%- elif item_data.item.genres -%}
              \n🎭 {{ item_data.item.genres[:3] | join(', ') }}
            {%- endif -%}

            {%- if item_data.item.tvdb and item_data.item.tvdb.status -%}
              \n📺 Status: {{ item_data.item.tvdb.status }}
            {%- endif %}",

          "inline": false
        }
        {% endfor %}

        {% if new_items|length > 8 %}
          {% if field_count.value > 0 %},{% endif %}
        {
          "name": "➕ Additional TV Content",
          "value": {{ ("And " ~ ((new_items|length - 8) | string) ~ " more TV items added...") | tojson }},
          "inline": false
        }
        {% endif %}
      ]
    }

    {% elif category == 'music' %}
    {
      "title": {{ ("🎵 New Music Added (" ~ (total_items | string) ~ ")") | tojson }},
      "description": "The following music has been added to Jellyfin:",
      "color": 65280,

      "fields": [
        {% set field_count = namespace(value=0) %}

        {#
          Process music content
          ---------------------
          Music uses Jellyfin properties only (no external metadata)
        #}
        {% for item_data in new_items[:10] %}
          {% if field_count.value > 0 %},{% endif %}
          {% set field_count.value = field_count.value + 1 %}
        {
          "name": "{% if item_data.item.item_type == 'Audio' -%}
              🎵 {{ item_data.item.name }}
            {%- elif item_data.item.item_type == 'MusicAlbum' -%}
              💿 {{ item_data.item.name }}
            {%- elif item_data.item.item_type == 'MusicArtist' -%}
              🎤 {{ item_data.item.name }}
            {%- else -%}
              🎵 {{ item_data.item.name }}
            {%- endif %}",

          "value": "
            {%- if item_data.item.item_type == 'Audio' -%}
              {%- if item_data.item.album %}Album: {{ item_data.item.album }}\n{% endif -%}
              {%- if item_data.item.artists %}Artist: {{ item_data.item.artists | join(', ') }}\n{% endif -%}
            {%- elif item_data.item.item_type == 'MusicAlbum' -%}
              {%- if item_data.item.album_artist %}Artist: {{ item_data.item.album_artist }}\n{% endif -%}
              {%- if item_data.item.year %}Year: {{ item_data.item.year }}\n{% endif -%}
            {%- endif -%}

            {%- if item_data.item.audio_codec -%}
              🔊 {{ item_data.item.audio_codec|upper }}
              {%- if item_data.item.audio_bitrate %} @ {{ (item_data.item.audio_bitrate / 1000)|round(0) }} kbps{% endif -%}
            {%- endif -%}

            {%- if item_data.item.runtime_ticks -%}
              {%- set minutes = (item_data.item.runtime_ticks / 600000000) | int -%}
              {%- set seconds = (((item_data.item.runtime_ticks / 10000000) | int) % 60) -%}
              \n⏱️ {{ minutes }}:{{ "%02d" % seconds }}
            {%- endif -%}

            {%- if item_data.item.genres and item_data.item.genres|length > 0 -%}
              \n🎭 {{ item_data.item.genres[:2] | join(', ') }}
            {%- endif %}",

          "inline": true
        }
        {% endfor %}

        {% if new_items|length > 10 %}
          {% if field_count.value > 0 %},{% endif %}
        {
          "name": "➕ Additional Music",
          "value": {{ ("And " ~ ((new_items|length - 10) | string) ~ " more music items added...") | tojson }},
          "inline": false
        }
        {% endif %}
      ]
    }

    {% else %}
    {#
      Other category (photos, books, etc.)
      -------------------------------------
    #}
    {
      "title": {{ ("📁 New Items Added (" ~ (total_items | string) ~ ")") | tojson }},
      "description": "The following items have been added to Jellyfin:",
      "color": 65280,

      "fields": [
        {% set field_count = namespace(value=0) %}

        {% for item_data in new_items[:15] %}
          {% if field_count.value > 0 %},{% endif %}
          {% set field_count.value = field_count.value + 1 %}
        {
          "name": "{{ item_data.item.item_type }}: {{ (item_data.item.name[:200] + '...')
            if item_data.item.name|length > 200 else item_data.item.name }}",

          "value": "
            {%- if item_data.item.overview -%}
              {{ (item_data.item.overview[:100] + '...') if item_data.item.overview|length > 100 else item_data.item.overview }}
            {%- else -%}
              {{ item_data.item.item_type }} added
            {%- endif -%}

            {%- if item_data.item.width and item_data.item.height -%}
              \n📐 {{ item_data.item.width }}×{{ item_data.item.height }}
            {%- endif -%}

            {%- if item_data.item.file_size -%}
              \n💾 {{ '%.1f'|format(item_data.item.file_size / 1048576) }} MB
            {%- endif %}",

          "inline": true
        }
        {% endfor %}

        {% if new_items|length > 15 %}
          {% if field_count.value > 0 %},{% endif %}
        {
          "name": "➕ Additional Items",
          "value": {{ ("And " ~ ((new_items|length - 15) | string) ~ " more items added...") | tojson }},
          "inline": false
        }
        {% endif %}
      ]
    }
    {% endif %}
    ,

    "footer": {
      "text": {{ ("Jellyfin" ~
        (" • " ~ new_items[0].item.server_name if new_items[0].item.server_name else "") ~
        {%- set has_omdb = new_items | selectattr('item.omdb') | list | length > 0 -%}
        {%- set has_tvdb = new_items | selectattr('item.tvdb') | list | length > 0 -%}
        {%- set has_tmdb = new_items | selectattr('item.tmdb') | list | length > 0 -%}
        (" • IMDb via OMDb" if has_omdb else "") ~
        (" • TheTVDB" if has_tvdb else "") ~
        (" • TMDb" if has_tmdb else "")
      ) | tojson }},
      "icon_url": {{ (jellyfin_url ~ "/web/favicon.png") | tojson }}
    },

    "timestamp": {{ timestamp | tojson }}
  ]
}
