{#
  New Item Jinja2 Discord Webhook Template for Jellynouncer
  ==========================================================

  This template generates Discord embed messages for newly added media items.
  It intelligently uses metadata from multiple sources with proper fallbacks.

  Metadata Source Priority:
  ------------------------
  - TV Shows/Episodes: TVDb ‚Üí Jellyfin base properties
  - Movies: TMDb ‚Üí OMDb ‚Üí Jellyfin base properties
  - Music: Jellyfin base properties only

  Discord Limits Respected:
  ------------------------
  - Max 256 chars for title
  - Max 4096 chars for description
  - Max 25 fields (we use ~10-15)
  - Max 1024 chars per field value
  - Max 6000 chars total per embed
#}
{
  "embeds": [
    {
      {#
        Dynamic Title Based on Item Type (Translated to French)
      #}
      "title": {{ ("üÜï" ~
        (" nouvel √©pisode : " ~ (item.series_name | default('S√©rie Inconnue')) ~ " - " ~ (item.name | default('√âpisode Inconnu'))) if item.item_type == 'Episode' else
        (" nouvelle s√©rie : " ~ (item.name | default('S√©rie Inconnue'))) if item.item_type == 'Series' else
        (" nouveau film : " ~ (item.name | default('Film Inconnu'))) if item.item_type == 'Movie' else
        (" nouvelle saison : " ~ (item.series_name | default('S√©rie Inconnue')) ~ " - Saison " ~ (item.season_number | string | default('?'))) if item.item_type == 'Season' else
        (" nouvelle musique : " ~ (item.name | default('Musique Inconnue'))) if item.item_type == 'Audio' else
        (" nouvel album : " ~ (item.name | default('Album Inconnu'))) if item.item_type == 'MusicAlbum' else
        (" nouvel ajout : " ~ (item.name | default('Contenu Inconnu')))
      ) | tojson }},

      {#
        Rich Description with Metadata Priority
      #}
      {% set desc = item.overview or (item.get('tmdb') and item.get('tmdb').get('overview')) or (item.get('omdb') and item.get('omdb').get('plot')) or '' %}
      "description": {{ (desc[:400] ~ ('...' if desc | length > 400 else '')) | tojson }},

      "color": {{ color }},

      {#
        Build a list of fields dynamically to avoid comma issues.
      #}
      {% set fields = [] %}

      {# Episode/Season Info #}
      {% if item.item_type == 'Episode' %}
        {% set _ = fields.append({
          "name": "Saison / √âpisode",
          "value": "`S%02dE%02d`" % (item.season_number | default(0), item.episode_number | default(0)),
          "inline": true
        }) %}
      {% elif item.item_type == 'Season' %}
        {% set _ = fields.append({
          "name": "Saison",
          "value": item.season_number | string,
          "inline": true
        }) %}
      {% endif %}

      {# Runtime and Year #}
      {% if item.runtime_ticks %}
        {% set minutes = (item.runtime_ticks / 600000000) | int %}
        {% set hours = (minutes / 60) | int %}
        {% set mins = (minutes % 60) %}
        {% set _ = fields.append({
          "name": "Dur√©e",
          "value": (hours ~ "h " ~ mins ~ "m" if hours > 0 else mins ~ " min"),
          "inline": true
        }) %}
      {% endif %}

      {% if item.year %}
        {% set _ = fields.append({
          "name": "Ann√©e",
          "value": item.year | string,
          "inline": true
        }) %}
      {% endif %}

      {# Technical Specifications #}
      {% if item.video_height %}
        {% set _ = fields.append({
          "name": "Qualit√©",
          "value": "`" ~ item.video_height ~ "p" ~ (" " ~ item.video_range if item.video_range and item.video_range != 'SDR' else "") ~ "`",
          "inline": true
        }) %}
      {% endif %}

      {% if item.video_codec %}
        {% set _ = fields.append({
          "name": "Vid√©o",
          "value": "`" ~ (item.video_codec | upper) ~ "`",
          "inline": true
        }) %}
      {% endif %}

      {% if item.audio_codec %}
        {% set _ = fields.append({
          "name": "Audio",
          "value": "`" ~ (item.audio_codec | upper) ~ (" " ~ item.audio_channels ~ "ch" if item.audio_channels else "") ~ "`",
          "inline": true
        }) %}
      {% endif %}

      {# Genres #}
      {% set display_genres = item.genres or (item.get('tmdb') and item.get('tmdb').get('genres_list')) or (item.get('omdb') and item.get('omdb').get('genres_list')) %}
      {% if display_genres %}
        {% set _ = fields.append({
          "name": "Genres",
          "value": (display_genres[:4] | join(', ')),
          "inline": false
        }) %}
      {% endif %}

      {# Ratings and Links #}
      {% set rating_parts = [] %}
      {% if item.imdb_id %}
          {% set _ = rating_parts.append('[IMDb](https://www.imdb.com/title/' ~ item.imdb_id ~ ')') %}
      {% endif %}
      {% if item.tmdb_id and item.item_type in ['Movie', 'Series'] %}
          {% set _ = rating_parts.append('[TMDb](https://www.themoviedb.org/' ~ ('movie' if item.item_type == 'Movie' else 'tv') ~ '/' ~ item.tmdb_id ~ ')') %}
      {% endif %}
      {% if item.ratings and item.ratings.imdb %}
          {% set _ = rating_parts.append('**IMDb:** ' ~ item.ratings.imdb.value) %}
      {% endif %}
      {% if item.ratings and item.ratings.tmdb %}
          {% set _ = rating_parts.append('**TMDb:** ' ~ item.ratings.tmdb.value) %}
      {% endif %}
      {% if item.ratings and item.ratings.metascore %}
          {% set _ = rating_parts.append('**Metacritic:** ' ~ item.ratings.metascore) %}
      {% endif %}

      {% if rating_parts %}
        {% set _ = fields.append({
          "name": "Notes et Liens",
          "value": (rating_parts | join(' ‚Ä¢ ')),
          "inline": false
        }) %}
      {% endif %}

      "fields": {{ fields | tojson }},

      {# Image #}
      {% if thumbnail_url %}
      "thumbnail": {
        "url": {{ thumbnail_url | tojson }}
      },
      {% endif %}

      {# Footer #}
      "footer": {
        "text": {{ ((item.library_name or 'Jellyfin') ~ (' ‚Ä¢ ' ~ item.server_name if item.server_name else '')) | tojson }},
        "icon_url": {{ (jellyfin_url ~ "/web/favicon.png") | tojson }}
      },

      {% if item.item_id %}
      "url": {{ (jellyfin_url ~ "/web/index.html#!/details?id=" ~ item.item_id) | tojson }},
      {% endif %}

      "timestamp": {{ timestamp | tojson }}
    }
  ]
}