{#
  Modèle de statut du serveur pour Jellynouncer
  =============================================

  Fournit des notifications complètes de statut de serveur avec métriques de santé.
  Prend en charge les états en ligne/hors ligne, performances dégradées et informations de récupération.

  Variables:
  - is_online: Booléen pour la connectivité du serveur
  - jellyfin_url: URL du serveur
  - timestamp: Horodatage ISO
  - server_info: Détails optionnels du serveur (quand en ligne)
  - health_data: Données optionnelles de vérification de santé
  - downtime_duration: Durée optionnelle d'arrêt du serveur
  - error_details: Informations optionnelles d'erreur
#}
{
  "embeds": [
    {
      {#
        Titre dynamique basé sur le statut
        -----------------------------------
        Prend en charge plus d'états que simplement en ligne/hors ligne
      #}
      "title": {{ (
        ("🟡 Serveur Jellyfin dégradé" if health_data and health_data.status == 'degraded'
         else "🟢 Serveur Jellyfin en ligne") if is_online
        else "🔴 Serveur Jellyfin hors ligne"
      ) | tojson }},

      {#
        Description améliorée avec contexte
        ------------------------------------
        Fournit des informations de statut plus détaillées
      #}
      "description": "{% if is_online -%}
        {%- if health_data and health_data.status == 'degraded' -%}
          ⚠️ **Le serveur Jellyfin rencontre des problèmes mais reste partiellement opérationnel.**\n\n
          🔍 **Détails du problème**: Certains composants peuvent ne pas fonctionner correctement\n
          📊 **Statut général**: Performances dégradées\n
          🔄 **Notifications**: Peuvent être retardées ou incomplètes
        {%- elif downtime_duration -%}
          🎉 **La connexion au serveur Jellyfin a été restaurée !**\n\n
          ⏱️ **Durée d'arrêt**: {{ downtime_duration }}\n
          📊 **Statut du service**: Tous les systèmes opérationnels\n
          🔄 **Actions de récupération**: Synchronisation des éléments manqués\n
          📺 **Accès aux médias**: Entièrement disponible
        {%- else -%}
          ✅ **Le serveur Jellyfin fonctionne normalement.**\n\n
          📊 **Statut du service**: Tous les systèmes opérationnels\n
          🔄 **Notifications**: Actives et en cours de traitement\n
          📺 **Accès aux médias**: Disponible
        {%- endif -%}
      {%- else -%}
        ⚠️ **Impossible de se connecter au serveur Jellyfin.**\n\n
        🔍 **Statut**: Connexion perdue
        {%- if error_details %}\n❌ **Erreur**: {{ error_details }}{% endif -%}
        \n⏰ **Intervalle de retry**: Toutes les 60 secondes\n
        📱 **Notifications**: Mises en file d'attente jusqu'à la reconnexion\n
        💾 **Données**: Toutes les notifications seront traitées lors de la restauration de connexion
      {%- endif %}",

      {#
        Couleur dynamique basée sur le statut
        --------------------------------------
      #}
      "color": {% if is_online -%}
        {%- if health_data and health_data.status == 'degraded' -%}
          16776960
        {%- else -%}
          65280
        {%- endif -%}
      {%- else -%}
        16711680
      {%- endif %},

      "fields": [
        {#
          Détails de connexion au serveur
          --------------------------------
        #}
        {
          "name": "🌐 Détails du serveur :",
          "value": {{ ("**URL**: " ~ jellyfin_url ~ "\n**Statut**: " ~
            ("⚠️ Dégradé" if is_online and health_data and health_data.status == 'degraded'
             else "✅ Connecté" if is_online
             else "❌ Déconnecté") ~
            ("\n**Serveur**: " ~ server_info.ServerName if server_info and server_info.ServerName else "") ~
            ("\n**Version**: " ~ server_info.Version if server_info and server_info.Version else "")
          ) | tojson }},
          "inline": true
        },

        {#
          Horodatage avec meilleur formatage
          ----------------------------------
        #}
        {
          "name": "🕐 Horodatage :",
          "value": {{ ((timestamp[:19] | replace('T', ' ')) ~ " UTC" ~
            ("\n**Temps d'arrêt**: " ~ downtime_duration if downtime_duration else "")
          ) | tojson }},
          "inline": true
        }

        {#
          Statut des composants de service (quand en ligne)
          --------------------------------------------------
        #}
        {% if is_online and health_data and health_data.components %}
        ,{
          "name": "📊 Statut des composants :",
          "value": "
            {%- if health_data.components.jellyfin -%}
              **Jellyfin**:
              {%- if health_data.components.jellyfin.status == 'healthy' %} ✅ Sain
              {%- elif health_data.components.jellyfin.status == 'degraded' %} ⚠️ Dégradé
              {%- else %} ❌ Défaillant{% endif -%}
            {%- endif -%}
            {%- if health_data.components.database -%}
              \n**Base de données**:
              {%- if health_data.components.database.status == 'healthy' %} ✅ Saine
              {%- else %} ❌ Problèmes{% endif -%}
              {%- if health_data.components.database.total_items %} ({{ health_data.components.database.total_items }} éléments){% endif -%}
            {%- endif -%}
            {%- if health_data.components.discord -%}
              \n**Discord**:
              {%- if health_data.components.discord.webhooks_configured %} ✅ {{ health_data.components.discord.webhooks_configured }} webhooks
              {%- else %} ❌ Aucun webhook{% endif -%}
            {%- endif -%}
            {%- if health_data.components.metadata_services -%}
              \n**Métadonnées**:
              {%- if health_data.components.metadata_services.enabled %} ✅ Activées
              {%- else %} ⚠️ Désactivées{% endif -%}
            {%- endif %}",
          "inline": false
        }
        {% endif %}

        {#
          Statistiques de service (quand en ligne)
          -----------------------------------------
        #}
        {% if is_online and health_data and health_data.service_status %}
        ,{
          "name": "📈 Métriques du service :",
          "value": "
            {%- if health_data.service_status.uptime_seconds -%}
              **Temps de fonctionnement**: {{ (health_data.service_status.uptime_seconds / 3600) | round(1) }} heures
            {%- endif -%}
            {%- if health_data.service_status.initial_sync_complete is defined -%}
              \n**Synchronisation initiale**:
              {%- if health_data.service_status.initial_sync_complete %} ✅ Terminée
              {%- else %} ⏳ En cours{% endif -%}
            {%- endif -%}
            {%- if health_data.service_status.sync_in_progress is defined -%}
              \n**Synchronisation en arrière-plan**:
              {%- if health_data.service_status.sync_in_progress %} 🔄 En cours
              {%- else %} ⏸️ Inactive{% endif -%}
            {%- endif %}",
          "inline": true
        }
        {% endif %}

        {#
          Statut de file d'attente (quand disponible)
          --------------------------------------------
        #}
        {% if queue_status %}
        ,{
          "name": "📬 Files de notifications :",
          "value": "
            {%- if queue_status.new_items is defined -%}
              **Nouveaux éléments**: {{ queue_status.new_items }} en file
            {%- endif -%}
            {%- if queue_status.upgraded_items is defined -%}
              \n**Mises à niveau**: {{ queue_status.upgraded_items }} en file
            {%- endif -%}
            {%- if queue_status.total is defined -%}
              \n**Total en attente**: {{ queue_status.total }}
            {%- endif %}",
          "inline": true
        }
        {% endif %}

        {#
          Prochaines étapes / Actions
          ----------------------------
        #}
        {% if is_online %}
        ,{
          "name": "🔄 {% if downtime_duration %}Actions de récupération{% else %}Actions système{% endif %}",
          "value": "
            {%- if downtime_duration -%}
              • Traitement des notifications en file d'attente\n
              • Synchronisation des changements de bibliothèque\n
              • Vérification de l'intégrité de la base de données\n
              • Reprise de la surveillance normale
            {%- elif health_data and health_data.status == 'degraded' -%}
              • Surveillance des composants dégradés\n
              • Tentative de récupération automatique\n
              • Enregistrement des informations de diagnostic\n
              • Possible nouvelle tentative d'opérations échouées
            {%- else -%}
              • Surveillance du nouveau contenu\n
              • Traitement normal des webhooks\n
              • Synchronisation en arrière-plan active\n
              • Tous les systèmes opérationnels
            {%- endif %}",
          "inline": false
        }
        {% else %}
        ,{
          "name": "📋 Récupération automatique :",
          "value": "• Tentative de reconnexion toutes les 60 secondes\n
            • Préservation de la file de notifications\n
            • Surveillance de la disponibilité du serveur\n
            • Synchronisation automatique lors de la restauration\n
            • Aucune donnée ne sera perdue",
          "inline": false
        }
        {% endif %}

        {#
          Détails d'erreur (quand hors ligne)
          ------------------------------------
        #}
        {% if not is_online and error_details %}
        ,{
          "name": "❌ Informations d'erreur :",
          "value": {{ ("**Type**: " ~ (error_type | default('Erreur de connexion')) ~ "\n" ~
            "**Détails**: " ~ ((error_details[:500] + '...') if error_details|length > 500 else error_details) ~ "\n" ~
            "**Heure**: " ~ (timestamp[:19] | replace('T', ' '))
          ) | tojson }},
          "inline": false
        }
        {% endif %}
      ],

      {#
        Miniature dynamique
        -------------------
      #}
      "thumbnail": {
        "url": {{ (
          (jellyfin_url ~ "/web/favicon.png" if health_data and health_data.status == 'degraded'
           else jellyfin_url ~ "/web/assets/img/banner-light.png") if is_online
          else jellyfin_url ~ "/web/favicon.png"
        ) | tojson }}
      },

      {#
        Pied de page amélioré
        ---------------------
      #}
      "footer": {
        "text": {{ ("Jellynouncer v2.0.0 • Service de surveillance" ~
          (" • " ~ server_info.ServerName if server_info and server_info.ServerName else "") ~
          (" • Métadonnées activées" if is_online and health_data and health_data.components.metadata_services and health_data.components.metadata_services.enabled else "")
        ) | tojson }},
        "icon_url": {{ (jellyfin_url ~ "/web/favicon.png") | tojson }}
      },

      "timestamp": {{ timestamp | tojson }}
    }
  ]
}